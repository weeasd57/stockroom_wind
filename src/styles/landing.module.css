.landingPage {
  width: 100%;
  min-height: 100vh;
  background: hsl(var(--background));
  color: hsl(var(--foreground));
  overflow-y: auto;
  overflow-x: hidden;
  position: relative;
  isolation: isolate;
}

/* Animated background gradient */
.landingPage::before {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    hsla(var(--foreground), 0.05) 0%,
    transparent 50%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 0;
  pointer-events: none;
}

.landingPage:hover::before {
  opacity: 1;
}

.heroSection {
  position: relative;
  min-height: 100vh;
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 4rem 2rem;
  overflow: hidden;
  gap: 4rem;
}

.heroContent {
  max-width: 600px;
  position: relative;
  z-index: 1;
  transform-style: preserve-3d;
  perspective: 1000px;
}

.heroTitle {
  font-size: clamp(2.5rem, 5vw, 4.5rem);
  font-weight: 800;
  line-height: 1.1;
  margin-bottom: 1.5rem;
  color: hsl(var(--foreground));
  position: relative;
  opacity: 0;
  transform: perspective(1000px) translateY(30px) translateZ(-50px);
  animation: titleIn3D 0.8s cubic-bezier(0.23, 1, 0.32, 1) forwards 0.2s;
  will-change: transform, opacity;
}

.heroTitle::after {
  content: '';
  position: absolute;
  left: 0;
  bottom: -5px;
  width: 0;
  height: 2px;
  background: linear-gradient(
    90deg,
    hsl(var(--foreground)) 0%,
    hsl(var(--foreground) / 0.5) 100%
  );
  animation: lineGrow 0.6s ease-out forwards 1s;
}

.heroSubtitle {
  font-size: clamp(1.1rem, 2vw, 1.25rem);
  line-height: 1.6;
  margin-bottom: 2.5rem;
  color: hsl(var(--muted-foreground));
  opacity: 0;
  transform: perspective(1000px) translateY(20px) translateZ(-30px);
  animation: subtitleIn3D 0.8s cubic-bezier(0.23, 1, 0.32, 1) forwards 0.4s;
  will-change: transform, opacity;
}

.heroCta {
  display: flex;
  gap: 1.5rem;
  opacity: 0;
  transform: perspective(1000px) translateY(20px) translateZ(-20px);
  animation: ctaIn3D 0.8s cubic-bezier(0.23, 1, 0.32, 1) forwards 0.6s;
  will-change: transform, opacity;
}

.primaryButton {
  padding: 1rem 2.5rem;
  font-size: 1.125rem;
  font-weight: 600;
  color: hsl(var(--background));
  background: hsl(var(--foreground));
  border: none;
  border-radius: 9999px;
  cursor: pointer;
  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
  position: relative;
  overflow: hidden;
  transform-style: preserve-3d;
  transform: perspective(1000px) translateZ(0);
}

.primaryButton::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    transparent,
    hsla(var(--foreground), 0.3),
    transparent
  );
  transform: translateX(-100%) translateZ(0);
  transition: transform 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

.primaryButton:hover {
  transform: perspective(1000px) translateY(-2px) translateZ(10px);
  box-shadow: 0 8px 30px hsla(var(--foreground), 0.2);
}

.primaryButton:hover::before {
  transform: translateX(100%) translateZ(0);
}

/* Floating elements animation */
.floatingElement {
  position: absolute;
  border-radius: 50%;
  background: hsla(var(--foreground), 0.05);
  filter: blur(5px);
  z-index: 0;
  animation: float3D 20s infinite;
  transform-style: preserve-3d;
  will-change: transform;
}

.floatingElement:nth-child(1) {
  width: 150px;
  height: 150px;
  top: 20%;
  left: 10%;
  animation-delay: 0s;
}

.floatingElement:nth-child(2) {
  width: 100px;
  height: 100px;
  top: 60%;
  right: 20%;
  animation-delay: -5s;
}

.floatingElement:nth-child(3) {
  width: 75px;
  height: 75px;
  bottom: 10%;
  left: 30%;
  animation-delay: -10s;
}

/* Keyframe Animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUpFade {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes lineGrow {
  from {
    width: 0;
  }
  to {
    width: 100px;
  }
}

@keyframes float {
  0%, 100% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(-10px, 10px);
  }
  50% {
    transform: translate(10px, -10px);
  }
  75% {
    transform: translate(-5px, -5px);
  }
}

/* Add mouse move effect */
.heroSection[data-mouse-move-x] {
  --mouse-x: attr(data-mouse-move-x);
  --mouse-y: attr(data-mouse-move-y);
}

/* Dark mode specific styles */
:global(.dark) .heroTitle::after {
  background: linear-gradient(
    90deg,
    hsl(var(--foreground)) 0%,
    transparent 100%
  );
}

:global(.dark) .floatingElement {
  background: hsla(var(--foreground), 0.03);
}

/* Responsive styles */
@media (max-width: 768px) {
  .heroSection {
    padding: 2rem 1.5rem;
    text-align: center;
    justify-content: center;
  }

  .heroTitle::after {
    left: 50%;
    transform: translateX(-50%);
  }

  .heroCta {
    flex-direction: column;
    align-items: center;
    gap: 1rem;
  }

  .primaryButton {
    width: 100%;
    max-width: 300px;
  }

  .floatingElement {
    display: none;
  }
}

.featuresSection {
  padding: 4rem 2rem;
  background: var(--background);
}

.sectionTitle {
  font-size: 2.5rem;
  font-weight: 700;
  text-align: center;
  margin-bottom: 3rem;
}

.featuresGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
}

.featureCard {
  padding: 2rem;
  background: hsl(var(--card));
  border-radius: 1rem;
  transition: transform 0.2s ease;
  color: hsl(var(--foreground));
}

.featureCard:hover {
  transform: translateY(-5px);
}

.featureCard h3 {
  color: hsl(var(--foreground));
  margin-bottom: 0.5rem;
}

.featureCard p {
  color: hsl(var(--muted-foreground));
}

.featureIcon {
  margin-bottom: 1rem;
  color: hsl(var(--primary));
}

.statsSection {
  padding: 4rem 2rem;
  background: hsl(var(--card));
  color: hsl(var(--foreground));
}

.statsContainer {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 2rem;
  max-width: 1200px;
  margin: 0 auto;
}

.statCard {
  text-align: center;
  padding: 2rem;
  background: hsl(var(--background));
  border-radius: 1rem;
  color: hsl(var(--foreground));
}

.statCard h3 {
  font-size: 2.5rem;
  font-weight: 700;
  color: hsl(var(--primary));
  margin-bottom: 0.5rem;
}

.statCard p {
  color: hsl(var(--muted-foreground));
}

/* Animations */
.fadeIn {
  opacity: 0;
  animation: fadeIn 0.5s ease forwards;
}

.slideInLeft {
  opacity: 0;
  transform: translateX(-50px);
  animation: slideIn 0.5s ease forwards;
}

.slideInRight {
  opacity: 0;
  transform: translateX(50px);
  animation: slideIn 0.5s ease forwards;
}

.slideInUp {
  opacity: 0;
  transform: perspective(1000px) translateY(50px) translateZ(-100px) rotateX(10deg);
  animation: slideInUp3D 0.8s cubic-bezier(0.23, 1, 0.32, 1) forwards;
  will-change: transform, opacity;
  transform-style: preserve-3d;
}

@keyframes slideIn {
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInUp3D {
  0% {
    opacity: 0;
    transform: perspective(1000px) translateY(50px) translateZ(-100px) rotateX(10deg);
  }
  100% {
    opacity: 1;
    transform: perspective(1000px) translateY(0) translateZ(0) rotateX(0);
  }
}

/* New 3D keyframe animations */
@keyframes titleIn3D {
  0% {
    opacity: 0;
    transform: perspective(1000px) translateY(30px) translateZ(-50px) rotateX(5deg);
  }
  100% {
    opacity: 1;
    transform: perspective(1000px) translateY(0) translateZ(0) rotateX(0);
  }
}

@keyframes subtitleIn3D {
  0% {
    opacity: 0;
    transform: perspective(1000px) translateY(20px) translateZ(-30px) rotateX(3deg);
  }
  100% {
    opacity: 1;
    transform: perspective(1000px) translateY(0) translateZ(0) rotateX(0);
  }
}

@keyframes ctaIn3D {
  0% {
    opacity: 0;
    transform: perspective(1000px) translateY(20px) translateZ(-20px) rotateX(2deg);
  }
  100% {
    opacity: 1;
    transform: perspective(1000px) translateY(0) translateZ(0) rotateX(0);
  }
}

/* Enhanced floating elements with 3D */
.floatingElement {
  position: absolute;
  border-radius: 50%;
  background: hsla(var(--foreground), 0.05);
  filter: blur(5px);
  z-index: 0;
  animation: float3D 20s infinite;
  transform-style: preserve-3d;
  will-change: transform;
}

@keyframes float3D {
  0%, 100% {
    transform: translate3d(0, 0, 0) rotateX(0) rotateY(0);
  }
  25% {
    transform: translate3d(-10px, 10px, 20px) rotateX(5deg) rotateY(3deg);
  }
  50% {
    transform: translate3d(10px, -10px, -20px) rotateX(-5deg) rotateY(-3deg);
  }
  75% {
    transform: translate3d(-5px, -5px, 10px) rotateX(3deg) rotateY(-5deg);
  }
}

/* Enhanced button hover effect */
.primaryButton {
  padding: 1rem 2.5rem;
  font-size: 1.125rem;
  font-weight: 600;
  color: hsl(var(--background));
  background: hsl(var(--foreground));
  border: none;
  border-radius: 9999px;
  cursor: pointer;
  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
  position: relative;
  overflow: hidden;
  transform-style: preserve-3d;
  transform: perspective(1000px) translateZ(0);
}

.primaryButton:hover {
  transform: perspective(1000px) translateY(-2px) translateZ(10px);
  box-shadow: 0 8px 30px hsla(var(--foreground), 0.2);
}

.primaryButton::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    transparent,
    hsla(var(--foreground), 0.3),
    transparent
  );
  transform: translateX(-100%) translateZ(0);
  transition: transform 0.6s cubic-bezier(0.23, 1, 0.32, 1);
}

.primaryButton:hover::before {
  transform: translateX(100%) translateZ(0);
}

/* Responsive */
@media (max-width: 768px) {
  .heroTitle {
    font-size: 2.5rem;
  }
  
  .heroSection {
    flex-direction: column;
    text-align: center;
  }
  
  .heroCta {
    justify-content: center;
  }
  
  .featuresGrid {
    grid-template-columns: 1fr;
  }
  
  .statsContainer {
    grid-template-columns: 1fr;
  }
}

/* Hero Image Styles */
.heroImageContainer {
  flex: 1;
  position: relative;
  perspective: 1000px;
  transform-style: preserve-3d;
  z-index: 2;
  opacity: 0;
  animation: imageContainerIn 1s cubic-bezier(0.23, 1, 0.32, 1) forwards 0.8s;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 2rem;
  background: hsla(var(--background), 0.5);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-radius: 20px;
}

.heroImage {
  width: 100%;
  height: auto;
  max-width: 500px;
  border-radius: 20px;
  transform: perspective(1000px) rotateY(-5deg) rotateX(5deg) translateZ(0);
  transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  position: relative;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  will-change: transform;
  object-fit: cover;
  aspect-ratio: 16/9;
}

.heroImage::before {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: 22px;
  background: linear-gradient(
    45deg,
    hsla(var(--foreground), 0.1),
    hsla(var(--foreground), 0.05)
  );
  z-index: -1;
  transition: opacity 0.3s ease;
}

.heroImage::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 20px;
  background: linear-gradient(
    120deg,
    transparent 20%,
    hsla(var(--foreground), 0.1) 40%,
    transparent 60%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  backdrop-filter: blur(5px);
}

.heroImageContainer:hover .heroImage {
  transform: perspective(1000px) rotateY(-2deg) rotateX(2deg) translateZ(50px);
  box-shadow: 0 35px 60px -20px rgba(0, 0, 0, 0.3);
}

.heroImageContainer:hover .heroImage::after {
  opacity: 1;
}

/* Floating shapes around hero image */
.heroShape {
  position: absolute;
  border-radius: 50%;
  background: hsla(var(--foreground), 0.1);
  filter: blur(20px);
  opacity: 0.5;
  z-index: -1;
  animation: shapeFloat 20s infinite;
  will-change: transform;
}

.heroShape:nth-child(1) {
  width: 300px;
  height: 300px;
  top: -50px;
  right: -30px;
  background: linear-gradient(
    45deg,
    hsla(var(--foreground), 0.1),
    transparent
  );
  animation-delay: -5s;
}

.heroShape:nth-child(2) {
  width: 250px;
  height: 250px;
  bottom: -30px;
  left: -50px;
  background: linear-gradient(
    -45deg,
    hsla(var(--foreground), 0.08),
    transparent
  );
  animation-delay: -10s;
}

/* New keyframe animations for hero image */
@keyframes imageContainerIn {
  0% {
    opacity: 0;
    transform: perspective(1000px) translateX(100px) translateZ(-100px) rotateY(-20deg);
  }
  100% {
    opacity: 1;
    transform: perspective(1000px) translateX(0) translateZ(0) rotateY(0);
  }
}

@keyframes shapeFloat {
  0%, 100% {
    transform: translate3d(0, 0, 0) rotate(0deg);
  }
  25% {
    transform: translate3d(10px, -10px, 20px) rotate(5deg);
  }
  50% {
    transform: translate3d(-15px, 15px, -20px) rotate(-5deg);
  }
  75% {
    transform: translate3d(15px, 10px, 0) rotate(3deg);
  }
}

/* Dark mode adjustments for hero image */
:global(.dark) .heroImage::before {
  background: linear-gradient(
    45deg,
    hsla(var(--foreground), 0.15),
    hsla(var(--foreground), 0.05)
  );
}

:global(.dark) .heroShape {
  opacity: 0.3;
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .heroSection {
    flex-direction: column;
    gap: 3rem;
    padding: 2rem 1.5rem;
    text-align: center;
  }

  .heroImageContainer {
    width: 100%;
    padding: 1rem;
  }

  .heroImage {
    transform: perspective(1000px) rotateY(0) rotateX(0) translateZ(0);
    max-width: 100%;
  }

  .heroImageContainer:hover .heroImage {
    transform: perspective(1000px) rotateY(0) rotateX(0) translateZ(20px);
  }

  .heroShape {
    opacity: 0.3;
  }
}
